---

import Arrow from '../assets/theme-images/icon-arrow.svg'

const { title, services } = Astro.props

---

<section id="services">

  <!-- Header -->
  <header class="bs-container mb-12">
    { title && <h2 class="bs-h2 text-center" set:html={ title }></h2>}
  </header>

  <!-- Services List -->
  <div class="bs-container space-y-16 md:space-y-24 mb-24">
    { services.map( (item, index) =>
      <div class={`flex flex-col ${index % 2 === 0 ? 'md:flex-row' : 'md:flex-row-reverse'} gap-8 md:gap-16 items-center`}>

        {/* Image - Left/Right alternating */}
        <div class="flex-1 w-full">
          <div class="relative rounded-xl skel-wrap flex items-center justify-center overflow-hidden min-h-[260px] md:min-h-[400px]">
            <div class="skeleton" aria-hidden="true"></div>
            <img src={ item.image } alt={ item.image_alt } loading="lazy"
              onload="this.parentElement.classList.add('loaded')"
              class="max-w-full max-h-full w-auto h-auto object-contain transition-opacity duration-300 opacity-0" />
          </div>
        </div>

        {/* Content - Right/Left alternating */}
        <div class="flex-1 flex flex-col gap-6 justify-center">
          <h3 class="bs-card-title" set:html={ item.title } />
          <div class="bs-body-text text-pretty" set:html={ item.content } />
        </div>

      </div>
    )}
  </div>

</section>

<style>

/* Smooth scroll behavior */
html {
  scroll-behavior: smooth;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@supports (animation-timeline: view()) {
  .bs-container > div > div {
    opacity: 0;
    animation: fadeInUp linear forwards;
    /* animation-timeline: view(10% 90%); */
  }
}

.skel-wrap { background: linear-gradient(140deg,#0a1b2e,#071320); position:relative; }
.skeleton { position:absolute; inset:0; background: linear-gradient(110deg, rgba(59,130,246,0.15) 8%, rgba(96,165,250,0.35) 18%, rgba(59,130,246,0.15) 33%); background-size:200% 100%; animation: skel 1.25s linear infinite; }
@keyframes skel { to { background-position: -200% 0; } }
.skel-wrap.loaded .skeleton { opacity:0; transition: opacity .35s ease; }
.skel-wrap.loaded img { opacity:1; }
@media (prefers-reduced-motion: reduce) { .skeleton { animation:none; background: rgba(59,130,246,0.25); } }

</style>