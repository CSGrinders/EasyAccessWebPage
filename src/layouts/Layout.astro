---

import '../assets/css/global.css'
import "../assets/css/base.css"
import "../assets/css/typography.css"
import "../assets/css/layout.css"
import "../assets/css/buttons.css"

import { Font } from 'astro:assets';

import Image from "astro/components/Image.astro"

import global_settings from "../data/global_settings.json"

import DialogModal from "../components/DialogModal.astro"
import FooterMain from "../components/FooterMain.astro"
import HeaderMain from "../components/HeaderMain.astro"

const { title, description } = Astro.props

---

<html lang="en">

  <head>

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />

    <title>{ title ?? global_settings.title }</title>

    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="manifest" href="/manifest.json" />

    <meta name="description" content={ description ?? global_settings.description } />
    <meta name="theme-color" content={ global_settings.theme_color } />

    <meta property="og:title" content={ title ?? global_settings.title } />
    <meta property="og:description" content={ description ?? global_settings.description } />
    <meta
      property="og:image"
      content={ global_settings.base_url + global_settings.social_image }
    />

    <Font cssVariable="--font-inter" preload />
    <Font cssVariable="--font-inter-display" preload />

    <script is:inline>
      (function() {
        try {
          const stored = localStorage.getItem('ea_theme');
          const prefersLight = window.matchMedia && window.matchMedia('(prefers-color-scheme: light)').matches;
          const isLight = stored ? stored === 'light' : prefersLight;
          const root = document.documentElement;
          if (isLight) root.classList.add('light'); else root.classList.remove('light');
          // Set theme-color meta for a nice PWA bar
          const meta = document.querySelector('meta[name="theme-color"]');
          const getColor = () => getComputedStyle(root).getPropertyValue('--background');
          if (meta) meta.setAttribute('content', `hsl(${getColor()})`);
          window.addEventListener('ea:toggle-theme', () => {
            root.classList.toggle('light');
            const nowLight = root.classList.contains('light');
            localStorage.setItem('ea_theme', nowLight ? 'light' : 'dark');
            if (meta) meta.setAttribute('content', `hsl(${getColor()})`);
          });
        } catch {}
      })();
    </script>

    <script is:inline>
      // Navbar visibility based on footer intersection
      document.addEventListener('DOMContentLoaded', function() {
        const navbar = document.querySelector('.floating-nav');
        const footer = document.querySelector('.minimal-footer');
        
        if (!navbar || !footer) return;
        
        // Create intersection observer for footer
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              // Footer is visible, hide navbar
              navbar.style.opacity = '0';
              navbar.style.pointerEvents = 'none';
              navbar.style.transform = 'translateX(-50%) translateY(20px)';
            } else {
              // Footer is not visible, show navbar
              navbar.style.opacity = '1';
              navbar.style.pointerEvents = 'auto';
              navbar.style.transform = 'translateX(-50%) translateY(0)';
            }
          });
        }, {
          // Trigger when footer is 100px from viewport
          rootMargin: '0px 0px 100px 0px',
          threshold: 0
        });
        
        observer.observe(footer);
      });
    </script>

  </head>

  <body id="top">

    <!-- Skip link -->
    <a class="fixed -top-20 focus-visible:top-0 p-3 bg-black/90 transition-all duration-300" href="#main">Skip to content</a>

    <!-- Header -->
    <HeaderMain settings={ global_settings } />

    <!-- Main slot -->
    <main id="main">
      <slot />
    </main>

    <!-- Footer -->
    <FooterMain settings={ global_settings } />

    <!-- Demo dialog modal -->
    <DialogModal />

  </body>
</html>

